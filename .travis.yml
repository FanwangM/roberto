# Pro tip: when all else fails, you can debug travis builds on your local machine.
# 1) Install docker-ce: https://docs.docker.com/install/
# 2) Get an up-to-date travis-ci docker image. For our linux builds, these can
#    be found here: https://hub.docker.com/r/travisci/ci-sardonyx/tags
#    Download as follows:
#        docker pull travisci/ci-sardonyx:packer-1549881206-387f377
#    You may want to use a newer tag than packer-1549881206-387f377.
#    This will take a while (3GB download)
# 3) Run the headless image:
#        BUILDID="build-$RANDOM"
#        docker run --name $BUILDID \
#            travisci/ci-sardonyx:packer-1549881206-387f377 \
#            /sbin/init
#    where you may also need to change the tag to be consistent with step 2.
# 4) In another terminal window, run the following, to get into the docker
#    instance:
#        docker exec -it $BUILDID bash -l
#    (Note that tab completion can be useful, instead of using env vars.)
# 5) Once in the image, switch first to the travis user:
#        su - travis
# 6) Then run all the commands you encounter in the travis log and debug.
# 7) When done, log out of the instance (exit two times)
# 8) Stop the instance
#        docker stop $BUILDID
# 9) Clean up
#        docker rm $BUILDID
#    This will clean up your experiments, but not the image you downloaded.

matrix:
  include:
    - os: linux
      dist: xenial
      language: generic
      env:
        - ROBERTO_CONDA_PINNING="python 3.5"
    - os: linux
      dist: xenial
      language: generic
      env:
        - ROBERTO_CONDA_PINNING="python 3.6"
    - os: linux
      dist: xenial
      language: generic
      env:
        - ROBERTO_CONDA_PINNING="python 3.7"
        - ROBERTO_DEPLOY=true
    - os: osx
      osx_image: xcode9.4
      language: generic
      env:
        - ROBERTO_CONDA_PINNING="python 3.6"
    - os: osx
      osx_image: xcode9.4
      language: generic
      env:
        - ROBERTO_CONDA_PINNING="python 3.7"

env:
  global:
    # Install conda in a *sub*directory of a directory cached by travis.
    - ROBERTO_CONDA_INSTALL_PATH=$HOME/cache/miniconda3
    # Build conda packages outside the miniconda tree, to avoid caching.
    # This makes it possible to still deploy packages after cache cleaning.
    - CONDA_BLD_PATH=$HOME/conda-bld

    # Debugging options
    # - HUB_VERBOSE=1

    # Instructions for (re)setting up a GITHUB_TOKEN, for theochem admins
    #   0) Install the travis-ci command-line client.
    #      https://github.com/travis-ci/travis.rb#installation
    #   1) Login with the Roberto's account on github.com.
    #   2) Go to profile settings. (https://github.com/settings/profile)
    #   3) Select "Developer settings".
    #   4) Select "Personal access tokens".
    #   5) Create a new token "automatic releases for theochem/***" and
    #      activate "public_repo", then save.
    #   6) Copy the token. It is only shown once.
    #   7) Encrypt the token on the command line
    #      travis encrypt --pro GITHUB_TOKEN="[copy-paste-your-github-token]"
    #      This command asks for a username and password. Roberto's account
    #      must be used.
    #   8) Copy-paste the encrypted line below
    #   9) Add the repository to the list the Buildtools team on theochem and
    #      enable write permission.
    # GITHUB_TOKEN
    # yamllint disable-line rule:line-length
    - secure: "kHLuS7Znf25Zv0hYRYyHlZEV0X78Dcm6JyfCO0txokEZ/cNaxj/WknAmLVe9QYVx53LJ5pYS+3bL2eZiK3eop5SrriXnjc6P2miB5AAMcZI7o7WAiE6ov3I7SH/pg6ExZ599RG+nTOEQG7Ppio28SQSVMzu/jXHEzL/SY+UsYMAM/m4wSvfoTOgk60lm+EjBI27QGI+ZLbAvMUmHtWWSTTUAU4XgPWNEVIAyVOcFuEknKtjXOmfIF8nRi4Qfg0tCBpfuS762fag8sPpu6O/Vw8XA/ckFyfD2tCP2nOjc8fDfWm66VoDBu/Vm3IZ7Q1nacHezXqXBN3E+7SqMVWtk2LrVIhGx3eedkvPxMqIjU65mG6Xf+3PM1lB52+IJWbEC1OMVD8Z6UfmuCbKbO5d4dYyYUrQh6ASmPHumCaEB5Uf4FWWrcASgSbsdrFn7VfVE0BTPeZ7OVXV/imBRvGPZLoTnb5v08uzqf0VjBit4ZBiZLAc2yiL8UFZUG+V66w8jcG2/1s9zRISEHDcynnU1QkzPTyp0JdI5OPAWLdCxdi0P2EA/f3MjhYrujB6urYPVKISe+Rnwc81zXZANdYUuo6n6VMP1VIQPWO9fS5LVO7H9CyqBwNrpGwkCF0HoXuxG/JD/jn2KBBLJHmaXgGrjY8V4soAD5BFGP2Z0b3w3Pz4="
    # Instructions for (re)setting up ANACONDA_API_TOKEN, for theochem admins
    #   0) Install travis-ci command-line client.
    #      https://github.com/travis-ci/travis.rb#installation
    #   1) Login with Roberto's account on anaconda.org
    #   2) Go to profile settings. (https://anaconda.org/theochem/settings/profile)
    #   3) Select "Access".
    #   4) Create a new token (Allow all API operations)
    #   5) Copy the token.
    #   6) Encrypt the token on the command line
    #      travis encrypt --pro ANACONDA_API_TOKEN="[copy-paste-your-anaconda-token]"
    #      This command asks for a username and password. Roberto's account
    #      must be used.
    #   7) Copy-paste the encrypted line below
    # ANACONDA_API_TOKEN
    # yamllint disable-line rule:line-length
    - secure: "TB+OtIxBb+nwvDu2LjDl/JQvzNhVbzsb6NAflLjbVq9etz2+jL0pA/51IWlIdU0eQnYT7IQxQHxrv4+ApftHeUrS2LTwdsO3Ld9X6d62bXR2kYzX5aH4a9wsIG4+Xxy+4oRfM4XKmAH98bb8qHN0w8P7q7h/21uLd1A17n47HoV8hvfvQAvRbHqX2KtwQkShhoqFp6ic/LG6abp5aPx2Ilzf1knRNk81XQYmG+LyRhLKaHXQpa1tPWpuofsNZ91UjjZGXN1BVODbPIcvFdO03N9E8xv7lAwKdWFzeTMvMiy4/wekPSvkdvMfF3nSZo9uR0dj8CdhEGM8Sp2HhjAhYPOqnU4SuoAkpPueI01cZfuaNJt1VDfKbJnFVh7zg49ukLH/CvbCjg/iM9HQZCQ8KagoTbYcUTQRDNEjMvl735HuYaAtuXD7Vh7hDHI90U2TiB1YF6TOBYS2fX5dNbRGTBk2xyw/xKZ9vIkkXZvtWYUPDMHJCOU2HCePArZ0aByEmGmdhfI54ZYtb17bKtBnpys5CVng8j8zGtUB2gCD1vwtuHbYlsvgCyaoYh6TO7+77veruW56b3R5x/c1a2R9Jxt0ashxSLNvE4vHGm7+zZmDpxDGEfhtelgIuj6ypoki8wg8wr7LlZfLjj+XKJK43DEk8LKZsVJuTeVPUQOeHws="
    # Instructions for (re)setting up TWINE_PASSWORD, for theochem admins
    #   0) Install travis-ci command-line client.
    #      https://github.com/travis-ci/travis.rb#installation
    #   1) Encrypt Roberto's Pypi password on the command line
    #      travis encrypt --pro TWINE_PASSWORD='[copy-paste-pypi-password]'
    #      This command asks for a username and password. Roberto's account
    #      must be used.
    #   2) Copy-paste the encrypted line below
    #   3) Fill in your username below.
    # TWINE_PASSWORD
    # yamllint disable-line rule:line-length
    - secure: "jlhDSD7sy8vXmdnLZokDTSrqX92oZxAA8Y+Z33mbefISGXsyi+JXprQ0dhOhp2Y7ZpzQT4YlQLHJxH5uc1v493eN6JFin1NsHknpDAaH42OXZHTGoQyuf5zZAtorD/VjuPtQmAPLksu7aIid24RG4qwRl3og9F7UCDs/QnFyPQMw84Xm5brMsNpANyROj5S8qNWk4/GARqr3Lzsq/SG5prXDgrO+FrCkS5OpjZTikDB7/8Ptp3YytgWQVl9RrA0RhFJiBLiVLXupxhLqxu84XFshesuPocFIxTe8jHbDZTQd49mBjDm6DfRQJNxgjg5CvMn+njRrP5aXwcxKM6zd21Vfcl1AoApP5Qd4f1ZUYEPjDm0ax6ipdKu/af4P/fCy99z/S2/Yxmh9JxPu65QqKBV4YEEy1BcflZLdKK3Syz0khspWoMGvDHdVKfcmOmvYQkmuH/QezEPPl49raOfPx8t+oW4nUEWMotMTFkFS9F/ahiKgjlxtLK5ZIIg5clo1gS0XfL85phm+NGBprbVd92JytUm1n/1F4eYquh0d6BRKYffV6ASMSOse5iadNmr30nQy2JIxzf65iZ8zYeYewLH4WOP6SjwkVGDnsRwemOU8oiXGP9EJqW0B3xkCGTj56e7WA7Hga5MUPRw2rYhSCX7c8IVUlf+z2yrG0Xs2Zwo="
    - TWINE_USERNAME: theochem

cache:
  directories:
    - $HOME/cache

install:
  # Get a basic python 3 with pip to run roberto
  - python3 --version
  - wget --no-clobber -O ${HOME}/cache/get-pip.py https://bootstrap.pypa.io/get-pip.py || true
  - python3 ${HOME}/cache/get-pip.py --user
  # Normally roberto should be installed from pypi, but roberto can take a shortcut.
  - python3 -m pip install . --user

script:
  # Instead of simply calling `rob -e`, we do something that always works on osx too.
  # Adding sleep trick to avoid potential output truncation issues
  #     See https://github.com/travis-ci/travis-ci/issues/6018
  - python3 -m roberto -e && sleep 10

before_cache:
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/conda-bld
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/locks
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/pkgs
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/var
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/envs/*/conda-bld
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/envs/*/locks
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/envs/*/pkgs
  - rm -rf ${ROBERTO_CONDA_INSTALL_PATH}/envs/*/var
